"use client"

import { useState, useEffect } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Switch } from "@/components/ui/switch"
import { Slider } from "@/components/ui/slider"
import { Badge } from "@/components/ui/badge"
import { Volume2, Music, Mic, Palette, Moon, Sun, Shield, Bell, Smartphone } from "lucide-react"
import { SoundButton } from "./sound-button"
import { useSound } from "../hooks/use-sound"
import { useHaptic } from "../hooks/use-haptic"
import { useVoice } from "../hooks/use-voice"
import { useBackgroundMusic } from "../hooks/use-background-music"

interface SettingsScreenProps {
  user: any
}

export default function SettingsScreen({ user }: SettingsScreenProps) {
  const [settings, setSettings] = useState({
    sound: {
      enabled: true,
      volume: 70,
      buttonSounds: true,
      rewardSounds: true,
      notificationSounds: true,
      theme: "classic" as "classic" | "modern" | "minimal",
    },
    haptic: {
      enabled: true,
      intensity: 50,
      buttonFeedback: true,
      rewardFeedback: true,
      notificationFeedback: true,
    },
    voice: {
      enabled: false,
      language: "bn-BD",
      rate: 80,
      pitch: 100,
      volume: 70,
      announcements: true,
      balanceUpdates: true,
      rewards: true,
    },
    music: {
      enabled: false,
      volume: 30,
      theme: "peaceful" as "peaceful" | "energetic" | "focus",
      autoPlay: false,
    },
    appearance: {
      theme: "light" as "light" | "dark" | "auto",
      language: "bn" as "bn" | "en",
      animations: true,
      reducedMotion: false,
    },
    notifications: {
      push: true,
      email: false,
      sms: false,
      investment: true,
      tasks: true,
      events: true,
      rewards: true,
    },
    privacy: {
      analytics: true,
      crashReports: true,
      personalizedAds: false,
      dataSharing: false,
    },
  })

  const { sounds } = useSound()
  const { hapticFeedback } = useHaptic()
  const { voiceNotifications, initSpeech } = useVoice()
  const { musicTracks, stopMusic, setVolume, isPlaying, currentTrack } = useBackgroundMusic()

  useEffect(() => {
    // Load settings from localStorage
    const savedSettings = localStorage.getItem("app-settings")
    if (savedSettings) {
      setSettings(JSON.parse(savedSettings))
    }
  }, [])

  const updateSettings = (category: string, key: string, value: any) => {
    const newSettings = {
      ...settings,
      [category]: {
        ...settings[category as keyof typeof settings],
        [key]: value,
      },
    }
    setSettings(newSettings)
    localStorage.setItem("app-settings", JSON.stringify(newSettings))

    // Apply settings immediately
    if (category === "music" && key === "volume") {
      setVolume(value / 100)
    }
  }

  const testSound = (type: string) => {
    switch (type) {
      case "button":
        sounds.buttonClick()
        if (settings.haptic.enabled) hapticFeedback.click()
        break
      case "success":
        sounds.success()
        if (settings.haptic.enabled) hapticFeedback.success()
        break
      case "reward":
        sounds.rewardBig()
        if (settings.haptic.enabled) hapticFeedback.reward()
        break
      case "notification":
        sounds.notification()
        if (settings.haptic.enabled) hapticFeedback.notification()
        break
    }
  }

  const testVoice = () => {
    initSpeech()
    voiceNotifications.welcome()
  }

  const toggleMusic = () => {
    if (isPlaying) {
      stopMusic()
    } else {
      musicTracks[settings.music.theme as keyof typeof musicTracks]()
    }
  }

  return (
    <div className="space-y-6 pb-20">
      {/* Header */}
      <div className="text-center">
        <h1 className="text-2xl font-bold bangla-text mb-2">‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏</h1>
        <p className="text-gray-600 bangla-text">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡ßÅ‡¶®</p>
      </div>

      {/* Sound Settings */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2 bangla-text">
            <Volume2 className="h-5 w-5 text-blue-600" />
            ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          {/* Master Sound Toggle */}
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶ö‡¶æ‡¶≤‡ßÅ/‡¶¨‡¶®‡ßç‡¶ß</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶∏‡¶¨ ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶á‡¶´‡ßá‡¶ï‡ßç‡¶ü ‡¶®‡¶ø‡¶Ø‡¶º‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®</p>
            </div>
            <Switch
              checked={settings.sound.enabled}
              onCheckedChange={(checked) => updateSettings("sound", "enabled", checked)}
            />
          </div>

          {settings.sound.enabled && (
            <>
              {/* Volume Control */}
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <p className="font-medium bangla-text">‡¶≠‡¶≤‡¶ø‡¶â‡¶Æ</p>
                  <span className="text-sm text-gray-600">{settings.sound.volume}%</span>
                </div>
                <Slider
                  value={[settings.sound.volume]}
                  onValueChange={([value]) => updateSettings("sound", "volume", value)}
                  max={100}
                  step={10}
                  className="w-full"
                />
              </div>

              {/* Sound Types */}
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium bangla-text">‡¶¨‡¶æ‡¶ü‡¶® ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶°</p>
                    <p className="text-sm text-gray-600 bangla-text">‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶è‡¶¨‡¶Ç ‡¶π‡ßã‡¶≠‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶°</p>
                  </div>
                  <div className="flex items-center gap-2">
                    <SoundButton
                      size="sm"
                      variant="outline"
                      onClick={() => testSound("button")}
                      className="bangla-text"
                    >
                      ‡¶ü‡ßá‡¶∏‡ßç‡¶ü
                    </SoundButton>
                    <Switch
                      checked={settings.sound.buttonSounds}
                      onCheckedChange={(checked) => updateSettings("sound", "buttonSounds", checked)}
                    />
                  </div>
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium bangla-text">‡¶∞‡¶ø‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶°</p>
                    <p className="text-sm text-gray-600 bangla-text">‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶¨‡ßã‡¶®‡¶æ‡¶∏ ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶°</p>
                  </div>
                  <div className="flex items-center gap-2">
                    <SoundButton
                      size="sm"
                      variant="outline"
                      onClick={() => testSound("reward")}
                      className="bangla-text"
                    >
                      ‡¶ü‡ßá‡¶∏‡ßç‡¶ü
                    </SoundButton>
                    <Switch
                      checked={settings.sound.rewardSounds}
                      onCheckedChange={(checked) => updateSettings("sound", "rewardSounds", checked)}
                    />
                  </div>
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium bangla-text">‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶°</p>
                    <p className="text-sm text-gray-600 bangla-text">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßç‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶°</p>
                  </div>
                  <div className="flex items-center gap-2">
                    <SoundButton
                      size="sm"
                      variant="outline"
                      onClick={() => testSound("notification")}
                      className="bangla-text"
                    >
                      ‡¶ü‡ßá‡¶∏‡ßç‡¶ü
                    </SoundButton>
                    <Switch
                      checked={settings.sound.notificationSounds}
                      onCheckedChange={(checked) => updateSettings("sound", "notificationSounds", checked)}
                    />
                  </div>
                </div>
              </div>

              {/* Sound Theme */}
              <div className="space-y-3">
                <p className="font-medium bangla-text">‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶•‡¶ø‡¶Æ</p>
                <div className="grid grid-cols-3 gap-2">
                  {[
                    { id: "classic", label: "‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡¶ø‡¶ï", icon: "üéµ" },
                    { id: "modern", label: "‡¶Æ‡¶°‡¶æ‡¶∞‡ßç‡¶®", icon: "üé∂" },
                    { id: "minimal", label: "‡¶Æ‡¶ø‡¶®‡¶ø‡¶Æ‡¶æ‡¶≤", icon: "üîá" },
                  ].map((theme) => (
                    <SoundButton
                      key={theme.id}
                      variant={settings.sound.theme === theme.id ? "default" : "outline"}
                      onClick={() => updateSettings("sound", "theme", theme.id)}
                      className="flex-col gap-1 h-16 bangla-text"
                    >
                      <span className="text-lg">{theme.icon}</span>
                      <span className="text-xs">{theme.label}</span>
                    </SoundButton>
                  ))}
                </div>
              </div>
            </>
          )}
        </CardContent>
      </Card>

      {/* Haptic Feedback Settings */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2 bangla-text">
            <Smartphone className="h-5 w-5 text-purple-600" />
            ‡¶π‡ßç‡¶Ø‡¶æ‡¶™‡¶ü‡¶ø‡¶ï ‡¶´‡¶ø‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï
            <Badge variant="secondary" className="text-xs">
              ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤
            </Badge>
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶≠‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶ö‡¶æ‡¶≤‡ßÅ/‡¶¨‡¶®‡ßç‡¶ß</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶∏‡ßç‡¶™‡¶∞‡ßç‡¶∂ ‡¶´‡¶ø‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï ‡¶®‡¶ø‡¶Ø‡¶º‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®</p>
            </div>
            <Switch
              checked={settings.haptic.enabled}
              onCheckedChange={(checked) => updateSettings("haptic", "enabled", checked)}
            />
          </div>

          {settings.haptic.enabled && (
            <>
              {/* Haptic Intensity */}
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <p className="font-medium bangla-text">‡¶≠‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶∂‡¶ï‡ßç‡¶§‡¶ø</p>
                  <span className="text-sm text-gray-600">{settings.haptic.intensity}%</span>
                </div>
                <Slider
                  value={[settings.haptic.intensity]}
                  onValueChange={([value]) => updateSettings("haptic", "intensity", value)}
                  max={100}
                  step={10}
                  className="w-full"
                />
              </div>

              {/* Haptic Types */}
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium bangla-text">‡¶¨‡¶æ‡¶ü‡¶® ‡¶´‡¶ø‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï</p>
                    <p className="text-sm text-gray-600 bangla-text">‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶≠‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∂‡¶®</p>
                  </div>
                  <div className="flex items-center gap-2">
                    <SoundButton
                      size="sm"
                      variant="outline"
                      onClick={() => hapticFeedback.click()}
                      className="bangla-text"
                    >
                      ‡¶ü‡ßá‡¶∏‡ßç‡¶ü
                    </SoundButton>
                    <Switch
                      checked={settings.haptic.buttonFeedback}
                      onCheckedChange={(checked) => updateSettings("haptic", "buttonFeedback", checked)}
                    />
                  </div>
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium bangla-text">‡¶∞‡¶ø‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶´‡¶ø‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï</p>
                    <p className="text-sm text-gray-600 bangla-text">‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶≠‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∂‡¶®</p>
                  </div>
                  <div className="flex items-center gap-2">
                    <SoundButton
                      size="sm"
                      variant="outline"
                      onClick={() => hapticFeedback.reward()}
                      className="bangla-text"
                    >
                      ‡¶ü‡ßá‡¶∏‡ßç‡¶ü
                    </SoundButton>
                    <Switch
                      checked={settings.haptic.rewardFeedback}
                      onCheckedChange={(checked) => updateSettings("haptic", "rewardFeedback", checked)}
                    />
                  </div>
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium bangla-text">‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶´‡¶ø‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï</p>
                    <p className="text-sm text-gray-600 bangla-text">‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶Ü‡¶∏‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶≠‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∂‡¶®</p>
                  </div>
                  <div className="flex items-center gap-2">
                    <SoundButton
                      size="sm"
                      variant="outline"
                      onClick={() => hapticFeedback.notification()}
                      className="bangla-text"
                    >
                      ‡¶ü‡ßá‡¶∏‡ßç‡¶ü
                    </SoundButton>
                    <Switch
                      checked={settings.haptic.notificationFeedback}
                      onCheckedChange={(checked) => updateSettings("haptic", "notificationFeedback", checked)}
                    />
                  </div>
                </div>
              </div>
            </>
          )}
        </CardContent>
      </Card>

      {/* Voice Settings */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2 bangla-text">
            <Mic className="h-5 w-5 text-green-600" />
            ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®
            <Badge variant="secondary" className="text-xs">
              ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ
            </Badge>
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶ö‡¶æ‡¶≤‡ßÅ/‡¶¨‡¶®‡ßç‡¶ß</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®</p>
            </div>
            <Switch
              checked={settings.voice.enabled}
              onCheckedChange={(checked) => updateSettings("voice", "enabled", checked)}
            />
          </div>

          {settings.voice.enabled && (
            <>
              {/* Voice Volume */}
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <p className="font-medium bangla-text">‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶≠‡¶≤‡¶ø‡¶â‡¶Æ</p>
                  <span className="text-sm text-gray-600">{settings.voice.volume}%</span>
                </div>
                <Slider
                  value={[settings.voice.volume]}
                  onValueChange={([value]) => updateSettings("voice", "volume", value)}
                  max={100}
                  step={10}
                  className="w-full"
                />
              </div>

              {/* Speech Rate */}
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <p className="font-medium bangla-text">‡¶ï‡¶•‡¶æ ‡¶¨‡¶≤‡¶æ‡¶∞ ‡¶ó‡¶§‡¶ø</p>
                  <span className="text-sm text-gray-600">{settings.voice.rate}%</span>
                </div>
                <Slider
                  value={[settings.voice.rate]}
                  onValueChange={([value]) => updateSettings("voice", "rate", value)}
                  min={50}
                  max={150}
                  step={10}
                  className="w-full"
                />
              </div>

              {/* Voice Test */}
              <div className="flex items-center justify-between">
                <div>
                  <p className="font-medium bangla-text">‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü</p>
                  <p className="text-sm text-gray-600 bangla-text">‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶∂‡ßÅ‡¶®‡ßÅ‡¶®</p>
                </div>
                <SoundButton size="sm" variant="outline" onClick={testVoice} className="bangla-text">
                  ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
                </SoundButton>
              </div>

              {/* Voice Notifications */}
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium bangla-text">‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü</p>
                    <p className="text-sm text-gray-600 bangla-text">‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®‡ßá‡¶∞ ‡¶ò‡ßã‡¶∑‡¶£‡¶æ</p>
                  </div>
                  <Switch
                    checked={settings.voice.balanceUpdates}
                    onCheckedChange={(checked) => updateSettings("voice", "balanceUpdates", checked)}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium bangla-text">‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶ò‡ßã‡¶∑‡¶£‡¶æ</p>
                    <p className="text-sm text-gray-600 bangla-text">‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ò‡ßã‡¶∑‡¶£‡¶æ</p>
                  </div>
                  <Switch
                    checked={settings.voice.rewards}
                    onCheckedChange={(checked) => updateSettings("voice", "rewards", checked)}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <p className="font-medium bangla-text">‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ò‡ßã‡¶∑‡¶£‡¶æ</p>
                    <p className="text-sm text-gray-600 bangla-text">‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ‡¶∞ ‡¶ò‡ßã‡¶∑‡¶£‡¶æ</p>
                  </div>
                  <Switch
                    checked={settings.voice.announcements}
                    onCheckedChange={(checked) => updateSettings("voice", "announcements", checked)}
                  />
                </div>
              </div>
            </>
          )}
        </CardContent>
      </Card>

      {/* Background Music Settings */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2 bangla-text">
            <Music className="h-5 w-5 text-indigo-600" />
            ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï
            {isPlaying && (
              <Badge variant="secondary" className="text-xs animate-pulse">
                ‡¶ö‡¶≤‡¶õ‡ßá
              </Badge>
            )}
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶ö‡¶æ‡¶≤‡ßÅ/‡¶¨‡¶®‡ßç‡¶ß</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶∂‡¶æ‡¶®‡ßç‡¶§ ‡¶™‡¶∞‡¶ø‡¶¨‡ßá‡¶∂‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï</p>
            </div>
            <Switch
              checked={settings.music.enabled}
              onCheckedChange={(checked) => updateSettings("music", "enabled", checked)}
            />
          </div>

          {settings.music.enabled && (
            <>
              {/* Music Volume */}
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <p className="font-medium bangla-text">‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶≠‡¶≤‡¶ø‡¶â‡¶Æ</p>
                  <span className="text-sm text-gray-600">{settings.music.volume}%</span>
                </div>
                <Slider
                  value={[settings.music.volume]}
                  onValueChange={([value]) => updateSettings("music", "volume", value)}
                  max={100}
                  step={5}
                  className="w-full"
                />
              </div>

              {/* Music Theme */}
              <div className="space-y-3">
                <p className="font-medium bangla-text">‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶•‡¶ø‡¶Æ</p>
                <div className="grid grid-cols-3 gap-2">
                  {[
                    { id: "peaceful", label: "‡¶∂‡¶æ‡¶®‡ßç‡¶§", icon: "üéº", desc: "‡¶Æ‡ßá‡¶°‡¶ø‡¶ü‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø" },
                    { id: "energetic", label: "‡¶â‡ßé‡¶∏‡¶æ‡¶π‡ßÄ", icon: "üéµ", desc: "‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø" },
                    { id: "focus", label: "‡¶Æ‡¶®‡ßã‡¶Ø‡ßã‡¶ó", icon: "üé∂", desc: "‡¶´‡ßã‡¶ï‡¶æ‡¶∏‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø" },
                  ].map((theme) => (
                    <SoundButton
                      key={theme.id}
                      variant={settings.music.theme === theme.id ? "default" : "outline"}
                      onClick={() => updateSettings("music", "theme", theme.id)}
                      className="flex-col gap-1 h-20 bangla-text"
                    >
                      <span className="text-lg">{theme.icon}</span>
                      <span className="text-xs font-medium">{theme.label}</span>
                      <span className="text-xs text-gray-500">{theme.desc}</span>
                    </SoundButton>
                  ))}
                </div>
              </div>

              {/* Music Controls */}
              <div className="flex items-center justify-between">
                <div>
                  <p className="font-medium bangla-text">‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤</p>
                  <p className="text-sm text-gray-600 bangla-text">
                    {isPlaying ? `${currentTrack} ‡¶ö‡¶≤‡¶õ‡ßá` : "‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶¨‡¶®‡ßç‡¶ß"}
                  </p>
                </div>
                <SoundButton
                  size="sm"
                  variant={isPlaying ? "destructive" : "default"}
                  onClick={toggleMusic}
                  className="bangla-text"
                >
                  {isPlaying ? "‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®" : "‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®"}
                </SoundButton>
              </div>

              {/* Auto Play */}
              <div className="flex items-center justify-between">
                <div>
                  <p className="font-medium bangla-text">‡¶Ö‡¶ü‡ßã ‡¶™‡ßç‡¶≤‡ßá</p>
                  <p className="text-sm text-gray-600 bangla-text">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ñ‡ßã‡¶≤‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶ö‡¶æ‡¶≤‡ßÅ</p>
                </div>
                <Switch
                  checked={settings.music.autoPlay}
                  onCheckedChange={(checked) => updateSettings("music", "autoPlay", checked)}
                />
              </div>
            </>
          )}
        </CardContent>
      </Card>

      {/* Appearance Settings */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2 bangla-text">
            <Palette className="h-5 w-5 text-pink-600" />
            ‡¶ö‡ßá‡¶π‡¶æ‡¶∞‡¶æ ‡¶ì ‡¶≠‡¶æ‡¶∑‡¶æ
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          {/* Theme */}
          <div className="space-y-3">
            <p className="font-medium bangla-text">‡¶•‡¶ø‡¶Æ</p>
            <div className="grid grid-cols-3 gap-2">
              {[
                { id: "light", label: "‡¶π‡¶æ‡¶≤‡¶ï‡¶æ", icon: <Sun className="h-4 w-4" /> },
                { id: "dark", label: "‡¶ó‡¶æ‡¶¢‡¶º", icon: <Moon className="h-4 w-4" /> },
                { id: "auto", label: "‡¶Ö‡¶ü‡ßã", icon: <Smartphone className="h-4 w-4" /> },
              ].map((theme) => (
                <SoundButton
                  key={theme.id}
                  variant={settings.appearance.theme === theme.id ? "default" : "outline"}
                  onClick={() => updateSettings("appearance", "theme", theme.id)}
                  className="flex-col gap-1 h-16 bangla-text"
                >
                  {theme.icon}
                  <span className="text-xs">{theme.label}</span>
                </SoundButton>
              ))}
            </div>
          </div>

          {/* Language */}
          <div className="space-y-3">
            <p className="font-medium bangla-text">‡¶≠‡¶æ‡¶∑‡¶æ</p>
            <div className="grid grid-cols-2 gap-2">
              {[
                { id: "bn", label: "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ", flag: "üáßüá©" },
                { id: "en", label: "English", flag: "üá∫üá∏" },
              ].map((lang) => (
                <SoundButton
                  key={lang.id}
                  variant={settings.appearance.language === lang.id ? "default" : "outline"}
                  onClick={() => updateSettings("appearance", "language", lang.id)}
                  className="flex items-center gap-2 h-12"
                >
                  <span className="text-lg">{lang.flag}</span>
                  <span className="text-sm">{lang.label}</span>
                </SoundButton>
              ))}
            </div>
          </div>

          {/* Animations */}
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶Æ‡ßá‡¶∂‡¶®</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶Æ‡¶∏‡ßÉ‡¶£ ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡¶ø‡¶∂‡¶® ‡¶è‡¶¨‡¶Ç ‡¶á‡¶´‡ßá‡¶ï‡ßç‡¶ü</p>
            </div>
            <Switch
              checked={settings.appearance.animations}
              onCheckedChange={(checked) => updateSettings("appearance", "animations", checked)}
            />
          </div>

          {/* Reduced Motion */}
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶ï‡¶Æ ‡¶ó‡¶§‡¶ø</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶Æ‡ßá‡¶∂‡¶® ‡¶ï‡¶Æ‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡¶ø‡¶®</p>
            </div>
            <Switch
              checked={settings.appearance.reducedMotion}
              onCheckedChange={(checked) => updateSettings("appearance", "reducedMotion", checked)}
            />
          </div>
        </CardContent>
      </Card>

      {/* Notification Settings */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2 bangla-text">
            <Bell className="h-5 w-5 text-yellow-600" />
            ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          {/* Push Notifications */}
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶™‡ßÅ‡¶∂ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶§‡¶æ‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶™‡¶æ‡¶®</p>
            </div>
            <Switch
              checked={settings.notifications.push}
              onCheckedChange={(checked) => updateSettings("notifications", "push", checked)}
            />
          </div>

          {/* Email Notifications */}
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶á‡¶Æ‡ßá‡¶á‡¶≤‡ßá ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶™‡¶æ‡¶®</p>
            </div>
            <Switch
              checked={settings.notifications.email}
              onCheckedChange={(checked) => updateSettings("notifications", "email", checked)}
            />
          </div>

          {/* SMS Notifications */}
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶´‡ßã‡¶®‡ßá ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶™‡¶æ‡¶®</p>
            </div>
            <Switch
              checked={settings.notifications.sms}
              onCheckedChange={(checked) => updateSettings("notifications", "sms", checked)}
            />
          </div>

          {/* Notification Types */}
          <div className="space-y-4 pt-4 border-t">
            <p className="font-medium bangla-text">‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶ß‡¶∞‡¶®</p>

            <div className="flex items-center justify-between">
              <div>
                <p className="font-medium bangla-text">‡¶¨‡¶ø‡¶®‡¶ø‡¶Ø‡¶º‡ßã‡¶ó ‡¶Ü‡¶™‡¶°‡ßá‡¶ü</p>
                <p className="text-sm text-gray-600 bangla-text">‡¶¨‡¶ø‡¶®‡¶ø‡¶Ø‡¶º‡ßã‡¶ó ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶§ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ</p>
              </div>
              <Switch
                checked={settings.notifications.investment}
                onCheckedChange={(checked) => updateSettings("notifications", "investment", checked)}
              />
            </div>

            <div className="flex items-center justify-between">
              <div>
                <p className="font-medium bangla-text">‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶∞‡¶ø‡¶Æ‡¶æ‡¶á‡¶®‡ßç‡¶°‡¶æ‡¶∞</p>
                <p className="text-sm text-gray-600 bangla-text">‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡¶ï</p>
              </div>
              <Switch
                checked={settings.notifications.tasks}
                onCheckedChange={(checked) => updateSettings("notifications", "tasks", checked)}
              />
            </div>

            <div className="flex items-center justify-between">
              <div>
                <p className="font-medium bangla-text">‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶Ü‡¶™‡¶°‡ßá‡¶ü</p>
                <p className="text-sm text-gray-600 bangla-text">‡¶®‡¶§‡ßÅ‡¶® ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶ñ‡¶¨‡¶∞</p>
              </div>
              <Switch
                checked={settings.notifications.events}
                onCheckedChange={(checked) => updateSettings("notifications", "events", checked)}
              />
            </div>

            <div className="flex items-center justify-between">
              <div>
                <p className="font-medium bangla-text">‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü</p>
                <p className="text-sm text-gray-600 bangla-text">‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶¨‡ßã‡¶®‡¶æ‡¶∏‡ßá‡¶∞ ‡¶ñ‡¶¨‡¶∞</p>
              </div>
              <Switch
                checked={settings.notifications.rewards}
                onCheckedChange={(checked) => updateSettings("notifications", "rewards", checked)}
              />
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Privacy Settings */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2 bangla-text">
            <Shield className="h-5 w-5 text-red-600" />
            ‡¶ó‡ßã‡¶™‡¶®‡ßÄ‡¶Ø‡¶º‡¶§‡¶æ ‡¶ì ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶§‡ßç‡¶§‡¶æ
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶∏</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶â‡¶®‡ßç‡¶®‡¶§‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡ßá‡¶ü‡¶æ ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®</p>
            </div>
            <Switch
              checked={settings.privacy.analytics}
              onCheckedChange={(checked) => updateSettings("privacy", "analytics", checked)}
            />
          </div>

          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶ï‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶™‡¶æ‡¶†‡¶æ‡¶®</p>
            </div>
            <Switch
              checked={settings.privacy.crashReports}
              onCheckedChange={(checked) => updateSettings("privacy", "crashReports", checked)}
            />
          </div>

          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶®</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶®</p>
            </div>
            <Switch
              checked={settings.privacy.personalizedAds}
              onCheckedChange={(checked) => updateSettings("privacy", "personalizedAds", checked)}
            />
          </div>

          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶°‡ßá‡¶ü‡¶æ ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø‡¶Ç</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶§‡ßÉ‡¶§‡ßÄ‡¶Ø‡¶º ‡¶™‡¶ï‡ßç‡¶∑‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞</p>
            </div>
            <Switch
              checked={settings.privacy.dataSharing}
              onCheckedChange={(checked) => updateSettings("privacy", "dataSharing", checked)}
            />
          </div>
        </CardContent>
      </Card>

      {/* Reset Settings */}
      <Card className="border-red-200">
        <CardHeader>
          <CardTitle className="text-red-600 bangla-text">‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏ ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex items-center justify-between">
            <div>
              <p className="font-medium bangla-text">‡¶∏‡¶¨ ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏ ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®</p>
              <p className="text-sm text-gray-600 bangla-text">‡¶∏‡¶¨ ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏ ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶Ø‡¶º ‡¶´‡¶ø‡¶∞‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶®‡ßÅ‡¶®</p>
            </div>
            <SoundButton
              variant="destructive"
              onClick={() => {
                localStorage.removeItem("app-settings")
                window.location.reload()
              }}
              className="bangla-text"
            >
              ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
            </SoundButton>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
